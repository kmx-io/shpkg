#!/bin/sh
# Copyright 2023 Thomas de Grivel

set -e

# Config
: ${SHPKG_DIR:=~/shpkg}
SHPKG_SHARE_DIR="${SHPKG_DIR}/share/shpkg"

# SHPKG
. ${SHPKG_SHARE_DIR}/shpkg.subr

# CLI
if [ "x$1" = "xbuild" ]; then
    shift
    verbose shpkg_build "$@"
    exit
elif [ "x$1" = "xclone" ]; then
    shift
    verbose shpkg_clone "$@"
    exit
elif [ "x$1" = "xconfigure" ]; then
    shift
    verbose shpkg_configure "$@"
    exit
elif [ "x$1" = "xfake" ]; then
    shift
    verbose shpkg_fake "$@"
    exit
elif [ "x$1" = "xfetch" ] ||
     [ "x$1" = "xf" ]; then
    shift
    verbose shpkg_fetch "$@"
    exit
elif [ "x$1" = "xinstall" ] ||
     [ "x$1" = "xi" ]; then
    shift
    verbose shpkg_install "$@"
    exit
elif [ "x$1" = "xpackage" ] ||
     [ "x$1" = "xpkg" ]; then
    shift
    verbose shpkg_package "$@"
    exit
elif [ "x$1" = "xpull" ] ||
     [ "x$1" = "xp" ]; then
    shift
    verbose shpkg_pull "$@"
    exit
elif [ "x$1" = "xremove" ] ||
     [ "x$1" = "xrm" ]; then
    shift
    verbose shpkg_uninstall "$@"
    verbose shpkg_remove "$@"
    exit
elif [ "x$1" = "xuninstall" ]; then
    shift
    verbose shpkg_uninstall "$@"
    exit
elif [ "x$1" = "xupdate" ]; then
    verbose shpkg_update
    exit
elif [ "x$1" = "xupgrade" ]; then
    shift
    verbose shpkg_upgrade "$@"
    exit
fi

echo "Usage: shpkg OPERATION PKG ...

Source directory operations :
 clone          shortcut for git clone
 fetch          shortcut for git fetch
 pull           shortcut for git pull
 remove | rm    shortcut for uninstall and rm -rf repo

Compilation operations :
 autogen        shortcut for ./autogen
 configure      shortcut for ./configure
 clean          shortcut for make clean
 build          shortcut for make

Package operations :
 fake           install compiled sources into fake directory
 package        build package from sources
 install        install package
 upgrade        pull sources, build package and install
 uninstall      uninstall package
" >&2

exit 1
